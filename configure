#!/usr/bin/env bash

if [ `uname` == "Darwin" ] ; then
  IS_OSX=true
fi

if [ "$1" = "force" ] ; then
	rm -f config.mk
fi

contains_flag () {
	if [ -f config.mk ]; then
		grep -E "^$1 := " config.mk &>/dev/null;
		return $?;
	fi

	return 1;
}

if contains_flag CC; then
	CC=`grep -oE 'CC := [^#]+' config.mk | cut -b7-`
else
	echo -ne "  Default compiler: \033[4mclang\033[m [Y/n] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[nN]* ) read -p "  Your favorite compiler: " CC
			;;
	*	  ) CC='clang'
			;;
	esac
	echo "ifdef STATIC_ANALYZER" >> config.mk
	echo "CC := ccc-analyzer" >> config.mk
	echo "else" >> config.mk
	echo "CC := $CC" >> config.mk
	echo "endif" >> config.mk
fi

if contains_flag CFLAGS && contains_flag LDFLAGS; then
	CFLAGS=`grep -oE 'CFLAGS := [^#]+' config.mk | cut -b11-`
	LDFLAGS=`grep -oE 'LDFLAGS := [^#]+' config.mk | cut -b12-`
else
	CFLAGS=" "
	LDFLAGS="-lm "
	echo -ne "  Enable \033[4mSSE2\033[m [Y/n] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[nN]* ) ;;
	*	  ) CFLAGS="$CFLAGS-msse2 -DHAVE_SSE2 "
			;;
	esac
	echo -ne "  With \033[4mlibjpeg\033[m [Y/n] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[nN]* ) ;;
	*	  ) CFLAGS="$CFLAGS-DHAVE_LIBJPEG "
			LDFLAGS="$LDFLAGS-ljpeg "
			;;
	esac
	echo -ne "  With \033[4mlibpng\033[m [Y/n] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[nN]* ) ;;
	*	  ) CFLAGS="$CFLAGS-DHAVE_LIBPNG "
			LDFLAGS="$LDFLAGS-lpng -lz "
      if [[ $IS_OSX ]] ; then
        CFLAGS="$CFLAGS-I/usr/X11/include "
        LDFLAGS="$LDFLAGS-L/usr/X11/lib "
      fi
			;;
	esac
	echo -ne "  With \033[4mgsl\033[m [Y/n] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[nN]* ) ;;
	*	  ) CFLAGS="$CFLAGS-DHAVE_GSL "
			LDFLAGS="$LDFLAGS-lgsl "
			;;
	esac
	echo -ne "  With \033[4mfftw3\033[m [Y/n] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[nN]* ) ;;
	*	  ) CFLAGS="$CFLAGS-DHAVE_FFTW3 "
			LDFLAGS="$LDFLAGS-lfftw3f -lfftw3 "
			;;
	esac

	echo -ne "  With \033[4mliblinear\033[m [Y/n] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[nN]* ) ;;
	*	  ) CFLAGS="$CFLAGS-DHAVE_LIBLINEAR "
			LDFLAGS="$LDFLAGS-llinear "
			;;
	esac
	echo -ne "  With \033[4mcblas\033[m [Y/n] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[nN]* ) ;;
	*	  ) CFLAGS="$CFLAGS-DHAVE_CBLAS "
			LDFLAGS="$LDFLAGS-lblas "
			;;
	esac
	echo -ne "  Use \033[4mopenmp\033[m [y/N] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[yY]* ) CFLAGS="$CFLAGS-DUSE_OPENMP -fopenmp "
			LDFLAGS="$LDFLAGS-lgomp "
			;;
	*	  ) ;;
	esac
	echo -ne "  With \033[4mavcodec\033[m [y/N] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[yY]* ) CFLAGS="$CFLAGS-DHAVE_AVCODEC "
			LDFLAGS="$LDFLAGS-lavcodec "
			;;
	*	  ) ;;
	esac
	echo -ne "  With \033[4mavformat\033[m [y/N] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[yY]* ) CFLAGS="$CFLAGS-DHAVE_AVFORMAT "
			LDFLAGS="$LDFLAGS-lavformat "
			;;
	*	  ) ;;
	esac
	echo -ne "  With \033[4mswscale\033[m [y/N] ? "
	read -n 1 yn ; if [ ! -z $yn ] ; then echo ; fi
	case $yn in
	[yY]* ) CFLAGS="$CFLAGS-DHAVE_SWSCALE "
			LDFLAGS="$LDFLAGS-lswscale "
			;;
	*	  ) ;;
	esac
	echo "CFLAGS := $CFLAGS" >> config.mk
	echo "LDFLAGS := $LDFLAGS" >> config.mk
fi

CFLAGS="${CFLAGS#"${CFLAGS%%[![:space:]]*}"}" # remove leading whitespaces
CFLAGS="${CFLAGS%"${CFLAGS##*[![:space:]]}"}" # remove trailing whitespaces
LDFLAGS="${LDFLAGS#"${LDFLAGS%%[![:space:]]*}"}"
LDFLAGS="${LDFLAGS%"${LDFLAGS##*[![:space:]]}"}"

echo -e "\n \033[1mUSE\033[m: \033[4m$CC\033[m\n \033[1mCOMPILE FLAGS\033[m: \033[4m$CFLAGS\033[m\n \033[1mLINK FLAGS\033[m: \033[4m$LDFLAGS\033[m\n"
