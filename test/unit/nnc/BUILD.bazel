load("@local_config_ccv//config:build_defs.bzl", "ccv_default_copts")

cc_binary(
  name = "attention.tests",
  srcs = ["attention.tests.c"],
  copts = ccv_default_copts(),
  deps = [
    "//test:case",
    "//lib:nnc"
  ]
)

cc_binary(
	name = "autograd.tests",
	srcs = ["autograd.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "autograd.vector.tests",
	srcs = ["autograd.vector.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "backward.tests",
	srcs = ["backward.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "batch.norm.tests",
	srcs = ["batch.norm.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "broadcast.tests",
	srcs = ["broadcast.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "case_of.backward.tests",
	srcs = ["case_of.backward.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "case_of.tests",
	srcs = ["case_of.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "cnnp.core.tests",
	srcs = ["cnnp.core.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "compression.tests",
	srcs = ["compression.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "crossentropy.tests",
	srcs = ["crossentropy.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "custom.tests",
	srcs = ["custom.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "dataframe.addons.tests",
	srcs = ["dataframe.addons.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "dataframe.tests",
	srcs = ["dataframe.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "dropout.tests",
	srcs = ["dropout.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "dynamic.graph.tests",
	srcs = ["dynamic.graph.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "forward.tests",
	srcs = ["forward.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "gemm.tests",
	srcs = ["gemm.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "gradient.tests",
	srcs = ["gradient.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "graph.io.tests",
	srcs = ["graph.io.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "graph.tests",
	srcs = ["graph.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "index.tests",
	srcs = ["index.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "layer.norm.tests",
	srcs = ["layer.norm.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "minimize.tests",
	srcs = ["minimize.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "nms.tests",
	srcs = ["nms.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "numa.tests",
	srcs = ["numa.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "parallel.tests",
	srcs = ["parallel.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "rand.tests",
	srcs = ["rand.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "reduce.tests",
	srcs = ["reduce.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "roi_align.tests",
	srcs = ["roi_align.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "simplify.tests",
	srcs = ["simplify.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "smooth_l1.tests",
	srcs = ["smooth_l1.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "swish.tests",
	srcs = ["swish.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "symbolic.graph.compile.tests",
	srcs = ["symbolic.graph.compile.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "symbolic.graph.tests",
	srcs = ["symbolic.graph.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "tape.tests",
	srcs = ["tape.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "tensor.bind.tests",
	srcs = ["tensor.bind.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "tensor.tests",
	srcs = ["tensor.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "tfb.tests",
	srcs = ["tfb.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "transform.tests",
	srcs = ["transform.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "upsample.tests",
	srcs = ["upsample.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "while.backward.tests",
	srcs = ["while.backward.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "while.tests",
	srcs = ["while.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)

cc_binary(
	name = "winograd.tests",
	srcs = ["winograd.tests.c"],
	copts = ccv_default_copts(),
	deps = [
		"//test:case",
		"//lib:nnc"
	]
)
